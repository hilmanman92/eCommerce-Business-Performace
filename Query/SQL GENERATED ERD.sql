-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    customer_unique_id character varying(255) COLLATE pg_catalog."default",
    customer_zip_code_prefix character varying(255) COLLATE pg_catalog."default",
    customer_city character varying(255) COLLATE pg_catalog."default",
    customer_state character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.geolocation
(
    geolocation_zip_code_prefix character varying(255) COLLATE pg_catalog."default" NOT NULL,
    geolocation_lat double precision,
    geolocation_lng double precision,
    geolocation_city character varying(255) COLLATE pg_catalog."default",
    geolocation_state character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT geolocation_pkey PRIMARY KEY (geolocation_zip_code_prefix),
    CONSTRAINT ukey_geolocation UNIQUE (geolocation_zip_code_prefix)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_id character varying(255) COLLATE pg_catalog."default",
    order_item_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_id character varying(255) COLLATE pg_catalog."default",
    seller_id character varying(255) COLLATE pg_catalog."default",
    shipping_limit_date timestamp without time zone,
    price numeric(10, 2),
    freight_value numeric(10, 2)
);

CREATE TABLE IF NOT EXISTS public.order_payments
(
    order_id character varying(255) COLLATE pg_catalog."default",
    payment_sequential integer,
    payment_type character varying(255) COLLATE pg_catalog."default",
    payment_installments integer,
    payment_value numeric(10, 2)
);

CREATE TABLE IF NOT EXISTS public.order_reviews
(
    review_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    order_id character varying(255) COLLATE pg_catalog."default",
    review_score integer,
    review_comment_title character varying(255) COLLATE pg_catalog."default",
    review_comment_message text COLLATE pg_catalog."default",
    review_creation_date timestamp without time zone,
    review_answer_timestamp timestamp without time zone
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    customer_id character varying(255) COLLATE pg_catalog."default",
    order_status character varying(255) COLLATE pg_catalog."default",
    order_purchase_timestamp timestamp without time zone,
    order_approved_at timestamp without time zone,
    order_delivered_carrier_date timestamp without time zone,
    order_delivered_customer_date timestamp without time zone,
    order_estimated_delivery_date timestamp without time zone,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    product_category_name character varying(255) COLLATE pg_catalog."default",
    product_name_length integer,
    product_description_length integer,
    product_photos_qty integer,
    product_weight_g double precision,
    product_length_cm double precision,
    product_height_cm double precision,
    product_width_cm double precision,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.sellers
(
    seller_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    seller_zip_code_prefix character varying(255) COLLATE pg_catalog."default",
    seller_city character varying(255) COLLATE pg_catalog."default",
    seller_state character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sellers_pkey PRIMARY KEY (seller_id)
);

ALTER TABLE IF EXISTS public.customers
    ADD FOREIGN KEY (customer_zip_code_prefix)
    REFERENCES public.geolocation (geolocation_zip_code_prefix) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_items
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_items
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_items
    ADD FOREIGN KEY (seller_id)
    REFERENCES public.sellers (seller_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_payments
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_reviews
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sellers
    ADD FOREIGN KEY (seller_zip_code_prefix)
    REFERENCES public.geolocation (geolocation_zip_code_prefix) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;